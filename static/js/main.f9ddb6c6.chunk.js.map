{"version":3,"sources":["components/TodoItem.module.css","components/FormInput.module.css","components/TodoList.module.css","components/FilterTodo.js","components/FormInput.js","components/SortTodo.js","components/TodoItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FilterTodo","props","value","selectedFilter","onChange","event","onFilterChange","target","FormInput","useState","enteredTodo","setEnteredTodo","isValid","setIsValid","onSubmit","preventDefault","trim","length","onAddTodo","htmlFor","className","classes","addTodo","type","id","invalid","autoFocus","SortTodo","selectedSort","onSortChange","TodoItem","todoItem","isCompleted","completed","children","onClick","onComplete","onDelete","TodoList","todos","sortConfig","sortedTodos","list","sort","todoA","todoB","date","todoList","map","item","onDeleteTodo","onCompleteTodo","text","App","localStorage","getItem","JSON","parse","getLocalStorage","setTodoList","filterTodo","setFilterTodo","sortTodo","setSortTodo","console","log","stringify","useEffect","setItem","Date","filteredTodo","filter","todo","inputTodo","prevState","updatedList","unshift","Math","random","toString","getTime","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,WAAW,2BAA2B,WAAW,2BAA2B,qBAAqB,qCAAqC,UAAY,8B,kBCA1MD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,QAAU,2BAA2B,UAAU,6B,mBCAtGD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,SAAW,6B,+JCgBtDC,EAfI,SAACC,GAInB,OACC,mCACC,yBAAQC,MAAOD,EAAME,eAAgBC,SALX,SAACC,GAC5BJ,EAAMK,eAAeD,EAAME,OAAOL,QAIjC,UACC,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,aAAd,8B,gBC0CWM,EAjDG,SAACP,GAClB,MAAsCQ,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAyBA,OACC,uBAAMC,SAXe,SAACT,GACtBA,EAAMU,iBAC4B,IAA9BL,EAAYM,OAAOC,QAIvBhB,EAAMiB,UAAUR,GAEhBC,EAAe,KALdE,GAAW,IAQZ,UACC,uBAAOM,QAAQ,UAAf,wBACA,sBAAKC,UAAWC,IAAQC,QAAxB,UACC,uBACCC,KAAK,OACLC,GAAG,UACHpB,SA9BuB,SAACC,GACvBA,EAAME,OAAOL,MAAMc,OAAOC,OAAS,GACtCJ,GAAW,GAEZF,EAAeN,EAAME,OAAOL,QA4BzBA,MAAOQ,EACPU,UAAS,WAAMR,GAAWS,IAAQI,SAClCC,WAAS,IAEV,iCACC,mBAAGN,UAAS,qBAAgBC,IAAQ,oBAGpCT,GAAW,8DChCDe,EAdE,SAAC1B,GAIjB,OACC,mCACC,yBAAQC,MAAOD,EAAM2B,aAAcxB,SALX,SAACC,GAC1BJ,EAAM4B,aAAaxB,EAAME,OAAOL,QAI/B,UACC,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,0B,gBCsBW4B,EA7BE,SAAC7B,GASjB,OACC,qBAAImB,UAAWC,IAAQU,SAAvB,UACC,sBAAMX,UAAS,UAAKnB,EAAM+B,aAAeX,IAAQY,WAAjD,SACC,+BAAOhC,EAAMiC,aAEd,gCACC,wBAAQX,KAAK,SAASY,QAVD,WACvBlC,EAAMmC,WAAWnC,EAAMuB,KASrB,SACC,mBACCJ,UAAS,sBAAiBC,IAAQ,YAAzB,YACRpB,EAAM+B,aAAeX,IAAQ,2BAGhC,wBAAQE,KAAK,SAASY,QApBH,WACrBlC,EAAMoC,SAASpC,EAAMuB,KAmBnB,SACC,mBAAGJ,UAAS,sBAAiBC,IAAQ,wB,iBCS3BiB,EA9BE,SAACrC,GACjB,IAAmBsC,EAAOC,EAWpBC,GAXaF,EAWWtC,EAAMyC,KAXVF,EAWgBvC,EAAMuC,WAVxCD,EAAMI,MAAK,SAACC,EAAOC,GAGzB,MAAmB,WAAfL,EACII,EAAME,KAAOD,EAAMC,MAAQ,EAAI,EAE/BF,EAAME,KAAOD,EAAMC,MAAQ,EAAI,MAMzC,OACC,oBAAI1B,UAAWC,IAAQ0B,SAAvB,SACEN,EAAYO,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CACCzB,GAAIyB,EAAKzB,GAETa,SAAUpC,EAAMiD,aAChBd,WAAYnC,EAAMkD,eAClBnB,YAAaiB,EAAKjB,YALnB,SAMEiB,EAAKG,MAJDH,EAAKzB,UCuFA6B,MAvGf,WACC,IAMA,EAAgC5C,mBANR,WACvB,IAAMsC,EAAWO,aAAaC,QAAQ,YAEtC,OAAOR,EAAWS,KAAKC,MAAMV,GAAY,GAGDW,IAAzC,mBAAOX,EAAP,KAAiBY,EAAjB,KACA,EAAoClD,mBAAS,OAA7C,mBAAOmD,EAAP,KAAmBC,EAAnB,KACA,EAAgCpD,mBAAS,UAAzC,mBAAOqD,EAAP,KAAiBC,EAAjB,KAEAC,QAAQC,IAAIT,KAAKU,UAAUnB,IAE3BoB,qBAAU,WACTb,aAAac,QAAQ,WAAYZ,KAAKU,UAAUnB,MAC9C,CAACA,IAgBJiB,QAAQC,IAAI,IAAII,MAEhB,IAyBMC,EAAevB,EAASwB,QAAO,SAACC,GACrC,MAAmB,QAAfZ,EACIY,EACkB,cAAfZ,GACkB,IAArBY,EAAKxC,aAEgB,IAArBwC,EAAKxC,eAQd,OACC,sBAAKZ,UAAU,MAAf,UACC,cAAC,EAAD,CAAWF,UAzDU,SAACuD,GACvBd,GAAY,SAACe,GACZ,IAAMC,EAAW,YAAOD,GAQxB,OAPAC,EAAYC,QAAQ,CACnBxB,KAAMqB,EACNjD,GAAIqD,KAAKC,SAASC,WAClB/C,aAAa,EACbc,MAAM,IAAIuB,MAAOW,YAGXL,QAgDP,sBAAKvD,UAAU,YAAf,UACE2B,EAAS9B,OAAS,GAClB,sBAAKG,UAAU,SAAf,UACC,cAAC,EAAD,CACCd,eAzBsB,SAACiE,GAC5BV,EAAcU,IAyBTpE,eAAgByD,IAEjB,cAAC,EAAD,CACC/B,aAfoB,SAACc,GAC1BoB,EAAYpB,IAePf,aAAckC,OAIhBf,EAAS9B,OAAS,EAClB,cAAC,EAAD,CACCyB,KAAM4B,EACNpB,aA1DqB,SAAC1B,GAC1BmC,GAAY,SAACe,GAGZ,OAFoBA,EAAUH,QAAO,SAACtB,GAAD,OAAUA,EAAKzB,KAAOA,SAyDxD2B,eAnDuB,SAAC3B,GAC5BmC,GAAY,SAACe,GAQZ,OAPoBA,EAAU1B,KAAI,SAACC,GAClC,OAAIA,EAAKzB,KAAOA,EACR,2BAAKyB,GAAZ,IAAkBjB,aAAciB,EAAKjB,cAE/BiB,SA8CLT,WAAYsB,IAGb,gEC3FUmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f9ddb6c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoItem\":\"TodoItem_todoItem__2WT0Q\",\"fa-trash\":\"TodoItem_fa-trash__1zoG0\",\"fa-check\":\"TodoItem_fa-check__2cp2g\",\"fa-check-completed\":\"TodoItem_fa-check-completed__2nvu1\",\"completed\":\"TodoItem_completed__3EZRL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTodo\":\"FormInput_addTodo__36XX4\",\"invalid\":\"FormInput_invalid__1cI4j\",\"fa-plus\":\"FormInput_fa-plus__3Z5pq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TodoList_container__3C_3M\",\"todoList\":\"TodoList_todoList__3KqM4\"};","import React from 'react';\r\n\r\nconst FilterTodo = (props) => {\r\n\tconst filterChangeHandler = (event) => {\r\n\t\tprops.onFilterChange(event.target.value);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<select value={props.selectedFilter} onChange={filterChangeHandler}>\r\n\t\t\t\t<option value='all'>All</option>\r\n\t\t\t\t<option value='completed'>Completed</option>\r\n\t\t\t\t<option value='incomplete'>Incomplete</option>\r\n\t\t\t</select>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default FilterTodo;\r\n","import React, { useState } from 'react';\r\n\r\nimport classes from './FormInput.module.css';\r\n\r\nconst FormInput = (props) => {\r\n\tconst [enteredTodo, setEnteredTodo] = useState('');\r\n\tconst [isValid, setIsValid] = useState(true);\r\n\r\n\tconst inputChangeHandler = (event) => {\r\n\t\tif (event.target.value.trim().length > 0) {\r\n\t\t\tsetIsValid(true);\r\n\t\t}\r\n\t\tsetEnteredTodo(event.target.value);\r\n\t};\r\n\r\n\t// const inputBlurHandler = () => {\r\n\t// \tif (enteredTodo.trim().length === 0) {\r\n\t// \t\tsetIsValid(false);\r\n\t// \t}\r\n\t// };\r\n\r\n\tconst submitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (enteredTodo.trim().length === 0) {\r\n\t\t\tsetIsValid(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tprops.onAddTodo(enteredTodo);\r\n\r\n\t\tsetEnteredTodo('');\r\n\t};\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<label htmlFor='addTodo'>Add a Todo</label>\r\n\t\t\t<div className={classes.addTodo}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tid='addTodo'\r\n\t\t\t\t\tonChange={inputChangeHandler}\r\n\t\t\t\t\t// onBlur={inputBlurHandler}\r\n\t\t\t\t\tvalue={enteredTodo}\r\n\t\t\t\t\tclassName={`${!isValid && classes.invalid}`}\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t/>\r\n\t\t\t\t<button>\r\n\t\t\t\t\t<i className={`fa fa-plus ${classes['fa-plus']}`}></i>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t{!isValid && <p>Please enter a valid todo</p>}\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\n\r\nconst SortTodo = (props) => {\r\n\tconst sortChangeHandler = (event) => {\r\n\t\tprops.onSortChange(event.target.value);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<select value={props.selectedSort} onChange={sortChangeHandler}>\r\n\t\t\t\t<option value='newest'>Newest</option>\r\n\t\t\t\t<option value='oldest'>Oldest</option>\r\n\t\t\t</select>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SortTodo;\r\n","import React from 'react';\r\nimport classes from './TodoItem.module.css';\r\n\r\nconst TodoItem = (props) => {\r\n\tconst deleteHandler = () => {\r\n\t\tprops.onDelete(props.id);\r\n\t};\r\n\r\n\tconst completeHandler = () => {\r\n\t\tprops.onComplete(props.id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<li className={classes.todoItem}>\r\n\t\t\t<span className={`${props.isCompleted && classes.completed}`}>\r\n\t\t\t\t<span>{props.children}</span>\r\n\t\t\t</span>\r\n\t\t\t<div>\r\n\t\t\t\t<button type='button' onClick={completeHandler}>\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tclassName={`fa fa-check ${classes['fa-check']} ${\r\n\t\t\t\t\t\t\tprops.isCompleted && classes['fa-check-completed']\r\n\t\t\t\t\t\t}`}></i>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type='button' onClick={deleteHandler}>\r\n\t\t\t\t\t<i className={`fa fa-trash ${classes['fa-trash']}`}></i>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport classes from './TodoList.module.css';\r\n\r\nconst TodoList = (props) => {\r\n\tconst sortTodos = (todos, sortConfig) => {\r\n\t\treturn todos.sort((todoA, todoB) => {\r\n\t\t\t// let date = todoA.date;\r\n\t\t\t// console.log(date);\r\n\t\t\tif (sortConfig === 'newest') {\r\n\t\t\t\treturn todoA.date > todoB.date ? -1 : 1;\r\n\t\t\t} else {\r\n\t\t\t\treturn todoA.date < todoB.date ? -1 : 1;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tconst sortedTodos = sortTodos(props.list, props.sortConfig);\r\n\r\n\treturn (\r\n\t\t<ul className={classes.todoList}>\r\n\t\t\t{sortedTodos.map((item) => (\r\n\t\t\t\t<TodoItem\r\n\t\t\t\t\tid={item.id}\r\n\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\tonDelete={props.onDeleteTodo}\r\n\t\t\t\t\tonComplete={props.onCompleteTodo}\r\n\t\t\t\t\tisCompleted={item.isCompleted}>\r\n\t\t\t\t\t{item.text}\r\n\t\t\t\t</TodoItem>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport FilterTodo from './components/FilterTodo';\nimport FormInput from './components/FormInput';\nimport SortTodo from './components/SortTodo';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\tconst getLocalStorage = () => {\n\t\tconst todoList = localStorage.getItem('todoList');\n\n\t\treturn todoList ? JSON.parse(todoList) : [];\n\t};\n\n\tconst [todoList, setTodoList] = useState(getLocalStorage());\n\tconst [filterTodo, setFilterTodo] = useState('all');\n\tconst [sortTodo, setSortTodo] = useState('newest');\n\n\tconsole.log(JSON.stringify(todoList));\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('todoList', JSON.stringify(todoList));\n\t}, [todoList]);\n\n\tconst addTodoHandler = (inputTodo) => {\n\t\tsetTodoList((prevState) => {\n\t\t\tconst updatedList = [...prevState];\n\t\t\tupdatedList.unshift({\n\t\t\t\ttext: inputTodo,\n\t\t\t\tid: Math.random().toString(),\n\t\t\t\tisCompleted: false,\n\t\t\t\tdate: new Date().getTime(),\n\t\t\t\t// date: new Date(),\n\t\t\t});\n\t\t\treturn updatedList;\n\t\t});\n\t};\n\n\tconsole.log(new Date());\n\n\tconst deleteTodoHandler = (id) => {\n\t\tsetTodoList((prevState) => {\n\t\t\tconst updatedList = prevState.filter((item) => item.id !== id);\n\t\t\t// console.log(updatedList);\n\t\t\treturn updatedList;\n\t\t});\n\t};\n\n\tconst completeTodoHandler = (id) => {\n\t\tsetTodoList((prevState) => {\n\t\t\tconst updatedList = prevState.map((item) => {\n\t\t\t\tif (item.id === id) {\n\t\t\t\t\treturn { ...item, isCompleted: !item.isCompleted };\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t});\n\n\t\t\treturn updatedList;\n\t\t});\n\t};\n\n\tconst filterChangeHandler = (filter) => {\n\t\tsetFilterTodo(filter);\n\t};\n\n\tconst filteredTodo = todoList.filter((todo) => {\n\t\tif (filterTodo === 'all') {\n\t\t\treturn todo;\n\t\t} else if (filterTodo === 'completed') {\n\t\t\treturn todo.isCompleted === true;\n\t\t} else {\n\t\t\treturn todo.isCompleted === false;\n\t\t}\n\t});\n\n\tconst sortChangeHandler = (sort) => {\n\t\tsetSortTodo(sort);\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<FormInput onAddTodo={addTodoHandler} />\n\t\t\t<div className='container'>\n\t\t\t\t{todoList.length > 0 && (\n\t\t\t\t\t<div className='filter'>\n\t\t\t\t\t\t<FilterTodo\n\t\t\t\t\t\t\tonFilterChange={filterChangeHandler}\n\t\t\t\t\t\t\tselectedFilter={filterTodo}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SortTodo\n\t\t\t\t\t\t\tonSortChange={sortChangeHandler}\n\t\t\t\t\t\t\tselectedSort={sortTodo}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{todoList.length > 0 ? (\n\t\t\t\t\t<TodoList\n\t\t\t\t\t\tlist={filteredTodo}\n\t\t\t\t\t\tonDeleteTodo={deleteTodoHandler}\n\t\t\t\t\t\tonCompleteTodo={completeTodoHandler}\n\t\t\t\t\t\tsortConfig={sortTodo}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<h3>No Todo found. Add one?</h3>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}